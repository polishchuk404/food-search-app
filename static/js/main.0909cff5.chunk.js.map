{"version":3,"sources":["components/RecipeDetails.js","components/Recipe.js","components/Alert.js","App.js","index.js"],"names":["RecipeDetails","ingredients","map","ingredient","className","text","Math","round","weight","uuidv4","Recipe","recipe","useState","show","setShow","label","image","url","healthLabels","src","alt","href","target","rel","name","join","onClick","Alert","alert","App","query","setQuery","recipes","setRecipes","setAlert","getData","a","Axios","get","result","data","more","console","log","hits","onSubmit","e","preventDefault","type","onChange","value","autoComplete","placeholder","ReactDOM","render","document","getElementById"],"mappings":"0OAceA,EAXO,SAAC,GACrB,OADyC,EAAlBC,YACJC,KAAI,SAAAC,GACrB,OACE,qBAAmBC,UAAU,kBAA7B,UACE,oBAAIA,UAAU,kBAAd,SAAiCD,EAAWE,OAC5C,qBAAID,UAAU,oBAAd,sBAA4CE,KAAKC,MAAMJ,EAAWK,QAAlE,SAFOC,mBCeAC,EAlBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACLC,oBAAS,GADJ,mBACtBC,EADsB,KAChBC,EADgB,OAE4BH,EAAOA,OAAxDI,EAFqB,EAErBA,MAAOC,EAFc,EAEdA,MAAOC,EAFO,EAEPA,IAAKhB,EAFE,EAEFA,YAAaiB,EAFX,EAEWA,aAExC,OACE,sBAAKd,UAAU,SAAf,UACE,6BAAKW,IACL,qBAAKI,IAAKH,EAAOI,IAAKL,IACtB,mBAAGM,KAAMJ,EAAKK,OAAO,SAASC,IAAI,sBAAlC,oBAGA,mBAAGnB,UAAU,eAAb,SAA6Bc,EAAahB,KAAI,SAAAsB,GAAI,OAAIA,KAAMC,KAAK,QACjE,wBAAQC,QAAS,kBAAMZ,GAASD,IAAhC,yBACCA,GAAQ,cAAC,EAAD,CAAeZ,YAAaA,QCN5B0B,EARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,qBAAKxB,UAAU,QAAf,SACE,6BAAKwB,OC8DIC,MA5Df,WAAgB,IAAD,EACajB,mBAAS,IADtB,mBACNkB,EADM,KACCC,EADD,OAEiBnB,mBAAS,IAF1B,mBAENoB,EAFM,KAEGC,EAFH,OAGarB,mBAAS,IAHtB,mBAGNgB,EAHM,KAGCM,EAHD,KAQPjB,EAAG,0CAAsCa,EAAtC,mBAHM,WAGN,oBAFO,oCAKVK,EAAO,uCAAG,4BAAAC,EAAA,yDACA,KAAVN,EADU,iCAESO,IAAMC,IAAIrB,GAFnB,WAENsB,EAFM,QAGAC,KAAKC,KAHL,yCAIHP,EAAS,2BAJN,OAMZQ,QAAQC,IAAIJ,EAAOC,KAAKI,MACxBX,EAAWM,EAAOC,KAAKI,MACvBb,EAAS,IACTG,EAAS,IATG,wBAWZA,EAAS,wBAXG,4CAAH,qDAsBb,OACE,sBAAK9B,UAAU,MAAf,UACE,6CACA,uBAAMyC,SARO,SAAAC,GACfA,EAAEC,iBACFZ,KAM4B/B,UAAU,cAApC,UACa,KAAVwB,GAAgB,cAAC,EAAD,CAAOA,MAAOA,IAC/B,uBACEoB,KAAK,OACLxB,KAAK,QACLyB,SAfS,SAAAH,GAAC,OAAIf,EAASe,EAAExB,OAAO4B,QAgBhCA,MAAOpB,EACPqB,aAAa,MACbC,YAAY,gBAEd,uBAAOJ,KAAK,SAASE,MAAM,cAG7B,qBAAK9C,UAAU,aAGf,qBAAKA,UAAU,UAAf,SACG4B,IAAY,IACXA,EAAQ9B,KAAI,SAAAS,GAAM,OAAI,cAAC,EAAD,CAAuBA,OAAQA,GAAlBF,wBCzD7C4C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0909cff5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst RecipeDetails = ({ ingredients }) => {\r\n  return ingredients.map(ingredient => {\r\n    return (\r\n      <ul key={uuidv4()} className=\"ingredient-list\">\r\n        <li className=\"ingredient-text\">{ingredient.text}</li>\r\n        <li className=\"ingredient-weight\">weight - {Math.round(ingredient.weight)}g</li>\r\n      </ul>\r\n    );\r\n  });\r\n};\r\n\r\nexport default RecipeDetails;\r\n","import React, { useState } from \"react\";\r\nimport RecipeDetails from \"./RecipeDetails\";\r\n\r\nconst Recipe = ({ recipe }) => {\r\n  const [show, setShow] = useState(false);\r\n  const { label, image, url, ingredients, healthLabels } = recipe.recipe;\r\n\r\n  return (\r\n    <div className=\"recipe\">\r\n      <h2>{label}</h2>\r\n      <img src={image} alt={label} />\r\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      recipe\r\n      </a>\r\n      <p className=\"healthLabels\">{healthLabels.map(name => name).join(', ')}</p>\r\n      <button onClick={() => setShow(!show)}>Ingredients</button>\r\n      {show && <RecipeDetails ingredients={ingredients} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from \"react\";\r\n\r\nconst Alert = ({ alert }) => {\r\n  return (\r\n    <div className=\"alert\">\r\n      <h3>{alert}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Recipe from \"./components/Recipe\";\nimport Alert from \"./components/Alert\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [alert, setAlert] = useState(\"\");\n\n  const APP_ID = \"1f866a3e\";\n  const APP_KEY = \"3214b3247efcdbc83bc9a4591c49abed\";\n\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n\n  const getData = async () => {\n    if (query !== \"\") {\n      const result = await Axios.get(url);\n      if (!result.data.more) {\n        return setAlert(\"No food with such name\");\n      }\n      console.log(result.data.hits);\n      setRecipes(result.data.hits);\n      setQuery(\"\");\n      setAlert(\"\");\n    } else {\n      setAlert(\"Please fill the form\");\n    }\n  };\n\n  const onChange = e => setQuery(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getData();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>food search</h1>\n      <form onSubmit={onSubmit} className=\"search-form\">\n        {alert !== \"\" && <Alert alert={alert} />}\n        <input\n          type=\"text\"\n          name=\"query\"\n          onChange={onChange}\n          value={query}\n          autoComplete=\"off\"\n          placeholder=\"Search Food\"\n        />\n        <input type=\"submit\" value=\"Search\" />\n        \n      </form>\n      <div className=\"products\">\n        \n      </div>\n      <div className=\"recipes\">\n        {recipes !== [] &&\n          recipes.map(recipe => <Recipe key={uuidv4()} recipe={recipe} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}